#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import argparse

GREP = "egrep --color=always -r"


def os_exec(cmd):
    os.system(cmd)


def find_email(path):
    email = "[a-zA-Z0-9_.+-]+@[a-zA-Z0-9]+\.[a-zA-Z0-9]+"
    cmd      = '{} "{}" {}'.format(GREP, email, path)

    os_exec(cmd)


def find_ips(path):
    ip_regex = "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])"
    cmd      = '{} "{}" {}'.format(GREP, ip_regex, path)

    os_exec(cmd)


def find_urls(path):
    url_regex = "(http|https)://[a-zA-Z0-9./?=_-]*"
    cmd       = '{} "{}" {}'.format(GREP, url_regex, path)

    os_exec(cmd)


def find_creds(path):
    keywords = ["user", "username", "pass", "password",
                "credentials", "creds"]

    for kw in keywords:
        cmd = "{} -i {} {}".format(GREP, kw, path)

        os_exec(cmd)


parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument("-i", '--ips', action="store_true", help='Searches for IP pattern in the given path')
parser.add_argument("-u", '--urls', action="store_true", help='Searches for IP pattern in the given path')
parser.add_argument("-m", '--mail', action="store_true", help='Searches for E-Mail pattern in the given path')
parser.add_argument("-p", '--path', help='The path')
parser.add_argument("-w", '--with-path', action="store_true", help='Shows the path info for each finding')
parser.add_argument("-e", '--extract', action="store_true", help='Prints only the matching string / extracts the matching string')
parser.add_argument("-c", '--credentials', action="store_true", help='Searches for credentials')

args = parser.parse_args()

if args.with_path:
    GREP += " -n"
else:
    GREP += " -h"

if args.extract:
    GREP += " -o"

if args.ips:
    find_ips(args.path)

if args.mail:
    find_email(args.path)

if args.urls:
    find_urls(args.path)

if args.credentials:
    find_creds(args.path)
