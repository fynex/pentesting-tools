package main

import (
	"flag"
	"fmt"
	"github.com/Ullaakut/nmap"
	"io/ioutil"
	"os"
)

func LogErr(err error) {
	if err != nil {
		fmt.Println(err)
	}
}

func showAll(result *nmap.Run) {
	for _, host := range result.Hosts {
		if len(host.Ports) == 0 || len(host.Addresses) == 0 {
			continue
		}

		hostname := ""
		if len(host.Hostnames) > 0 {
			hostname = host.Hostnames[0].String()
		}

		fmt.Printf("Host %q (%s):\n", host.Addresses[0], hostname)

		for _, port := range host.Ports {
			fmt.Printf("\tPort %d/%s %s %s\n", port.ID, port.Protocol, port.State, port.Service.Name)
		}
	}
}

func main() {

	flag.Parse()

	fileNames := flag.Args()

	for _, fileName := range fileNames {
		fmt.Println("[*] Parsed File:", fileName)

		dat, err := ioutil.ReadFile(fileName)

		if err != nil {
			fmt.Println("[!] Unable to read file", fileName)
			fmt.Println(err)

			os.Exit(1)
		}

		result, err := nmap.Parse(dat)
		LogErr(err)

		showAll(result)

		fmt.Printf("[*] %d hosts up\n", len(result.Hosts))
		fmt.Println()
	}
}
